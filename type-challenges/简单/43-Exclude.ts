// 实现个自己的Exclude

// 联合类型的生成，T一定是一个联合类型，生成一个新的类型，排除掉第二个参数的类型。

// T是个联合类型，反向来看，主要是T包含在U中，就不返回，否则返回的是T。
// 而且U和T是没有关系的，需要注意。

type MyExclude<T, U> = T extends U ? never : T;